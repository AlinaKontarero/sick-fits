{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"C:/projects/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\advanced-react\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\SingleProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_ITEM_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      name\\n      price\\n      description\\n      photo {\\n        image {\\n          publicUrlTransformed\\n          alt\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport DisplayError from './ErrorMessage';\nvar SINGLE_ITEM_QUERY = gql(_templateObject());\nexport default function SingleProduct(_ref) {\n  _s();\n\n  var _Product$photo, _Product$photo$image, _Product$photo2, _Product$photo2$image;\n\n  var id = _ref.id;\n\n  var _useQuery = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      loading = _useQuery.loading,\n      error = _useQuery.error;\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  var Product = data.Product;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\".concat((_Product$photo = Product.photo) === null || _Product$photo === void 0 ? void 0 : (_Product$photo$image = _Product$photo.image) === null || _Product$photo$image === void 0 ? void 0 : _Product$photo$image.publicUrlTransformed),\n      alt: (_Product$photo2 = Product.photo) === null || _Product$photo2 === void 0 ? void 0 : (_Product$photo2$image = _Product$photo2.image) === null || _Product$photo2$image === void 0 ? void 0 : _Product$photo2$image.alt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: Product.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: Product.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleProduct, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n\n_c = SingleProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleProduct\");","map":{"version":3,"sources":["C:/projects/advanced-react/Advanced-React/sick-fits/frontend/components/SingleProduct.js"],"names":["gql","useQuery","DisplayError","SINGLE_ITEM_QUERY","SingleProduct","id","variables","data","loading","error","message","Product","photo","image","publicUrlTransformed","alt","name","description"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAgBA,eAAe,SAASI,aAAT,OAA+B;AAAA;;AAAA;;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACXJ,QAAQ,CAACE,iBAAD,EAAoB;AAC3DG,IAAAA,SAAS,EAAE;AACTD,MAAAA,EAAE,EAAFA;AADS;AADgD,GAApB,CADG;AAAA,MACpCE,IADoC,aACpCA,IADoC;AAAA,MAC9BC,OAD8B,aAC9BA,OAD8B;AAAA,MACrBC,KADqB,aACrBA,KADqB;;AAM5C,MAAID,OAAJ,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,MAAIC,KAAJ,EAAW;AACT,wBAAO,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAX2C,MAYpCC,OAZoC,GAYxBJ,IAZwB,CAYpCI,OAZoC;AAa5C,sBACE;AAAA,4BACE;AACE,MAAA,GAAG,8BAAKA,OAAO,CAACC,KAAb,2EAAK,eAAeC,KAApB,yDAAK,qBAAsBC,oBAA3B,CADL;AAEE,MAAA,GAAG,qBAAEH,OAAO,CAACC,KAAV,6EAAE,gBAAeC,KAAjB,0DAAE,sBAAsBE;AAF7B;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAA,gBAAKJ,OAAO,CAACK;AAAb;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBAAIL,OAAO,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAvBuBb,a;UACWH,Q;;;KADXG,a","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useQuery } from '@apollo/client';\r\nimport DisplayError from './ErrorMessage';\r\n\r\nconst SINGLE_ITEM_QUERY = gql`\r\n  query SINGLE_ITEM_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      name\r\n      price\r\n      description\r\n      photo {\r\n        image {\r\n          publicUrlTransformed\r\n          alt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function SingleProduct({ id }) {\r\n  const { data, loading, error } = useQuery(SINGLE_ITEM_QUERY, {\r\n    variables: {\r\n      id,\r\n    },\r\n  });\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n  if (error) {\r\n    return <DisplayError error={error.message} />;\r\n  }\r\n  const { Product } = data;\r\n  return (\r\n    <div>\r\n      <img\r\n        src={`${Product.photo?.image?.publicUrlTransformed}`}\r\n        alt={Product.photo?.image?.alt}\r\n      />\r\n      <h2>{Product.name}</h2>\r\n      <p>{Product.description}</p>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
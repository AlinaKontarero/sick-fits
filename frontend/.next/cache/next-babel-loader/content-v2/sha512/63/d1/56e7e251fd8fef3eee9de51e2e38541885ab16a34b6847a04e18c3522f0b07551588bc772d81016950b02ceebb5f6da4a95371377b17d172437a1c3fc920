{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\advanced-react\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\";\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nconst SINGLE_PRODUCT_QUERY = gql`\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\n    Product(where: { id: $id }) {\n      id\n      name\n      description\n      price\n    }\n  }\n`;\nexport default function UpdateProduct({\n  id\n}) {\n  // 1. get the existing item \n  const {\n    data,\n    error,\n    loading\n  } = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id\n    }\n  });\n  console.log('data from update: ', data); // 2. get the mutation to update the item \n  // 3. we need the form to handle the updates \n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Update!!! \", id, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/advanced-react/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["gql","useQuery","SINGLE_PRODUCT_QUERY","UpdateProduct","id","data","error","loading","variables","console","log"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,MAAMC,oBAAoB,GAAIF,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAaA,eAAe,SAASG,aAAT,CAAuB;AAAEC,EAAAA;AAAF,CAAvB,EAA+B;AAC5C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BN,QAAQ,CAACC,oBAAD,EAAuB;AAC9DM,IAAAA,SAAS,EAAE;AAAEJ,MAAAA;AAAF;AADmD,GAAvB,CAAzC;AAIAK,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,IAAlC,EAN4C,CAO5C;AAEA;;AAEA,sBACE;AAAA,6BAAcD,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD","sourcesContent":["import gql from 'graphql-tag'\r\nimport { useQuery } from '@apollo/client'\r\n\r\nconst SINGLE_PRODUCT_QUERY =  gql`\r\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nexport default function UpdateProduct({ id }) {\r\n  // 1. get the existing item \r\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n    variables: { id }\r\n  })\r\n\r\n  console.log('data from update: ', data)\r\n  // 2. get the mutation to update the item \r\n\r\n  // 3. we need the form to handle the updates \r\n\r\n  return ( \r\n    <p>Update!!! {id} </p>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}
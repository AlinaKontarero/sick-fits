{"ast":null,"code":"import _regeneratorRuntime from \"C:/projects/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/projects/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"C:/projects/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/advanced-react/Advanced-React/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\advanced-react\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UPDATE_PRODUCT_MUTATION(\\n    $id: ID!\\n    $name: String\\n    $description: String\\n    $price: Int\\n  ) {\\n    updateProduct(\\n      id: $id\\n      data: { name: $name, description: $description, price: $price }\\n    ) {\\n      id\\n      price\\n      description\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\\n    Product(where: { id: $id }) {\\n      id\\n      name\\n      description\\n      price\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useMutation, useQuery } from '@apollo/client';\nimport Form from './styles/Form';\nimport DisplayError from './ErrorMessage';\nimport useForm from '../lib/useForm';\nvar SINGLE_PRODUCT_QUERY = gql(_templateObject());\nvar UPDATE_PRODUCT_MUTATION = gql(_templateObject2());\nexport default function UpdateProduct(_ref) {\n  _s();\n\n  var id = _ref.id;\n\n  // 1. get the existing item\n  var _useQuery = useQuery(SINGLE_PRODUCT_QUERY, {\n    variables: {\n      id: id\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  console.log('data from updates: ', data); // 2. get the mutation to update the item\n\n  var _useMutation = useMutation(UPDATE_PRODUCT_MUTATION, {\n    variables: {\n      id: id // updates to the product:\n\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      mutationResponse = _useMutation2[1]; // inputs state:\n\n\n  var _useForm = useForm(data === null || data === void 0 ? void 0 : data.Product),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      clearForm = _useForm.clearForm,\n      resetForm = _useForm.resetForm;\n\n  console.log(inputs); // 3. we need the form to handle the updates\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return updateProduct({\n                  variables: {\n                    id: id,\n                    name: inputs.name,\n                    description: inputs.description,\n                    price: inputs.price\n                  }\n                })[\"catch\"](console.error);\n\n              case 3:\n                res = _context.sent;\n                console.log('res::: ', res); // @TODO: handle submit\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: [/*#__PURE__*/_jsxDEV(DisplayError, {\n      error: mutationResponse.error || error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      disabled: mutationResponse.loading,\n      \"aria-busy\": mutationResponse.loading,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Name\",\n          value: inputs.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"price\",\n        children: [\"Price\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"price\",\n          name: \"price\",\n          placeholder: \"Price\",\n          value: inputs.price,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: [\"Description\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          placeholder: \"Description\",\n          value: inputs.description,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: function onClick() {\n          return console.log('inputs::: ', inputs);\n        },\n        type: \"submit\",\n        children: \"Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UpdateProduct, \"RlXDDZiN4+QgpjxoVFQtgkuT8Wk=\", false, function () {\n  return [useQuery, useMutation, useForm];\n});\n\n_c = UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["C:/projects/advanced-react/Advanced-React/sick-fits/frontend/components/UpdateProduct.js"],"names":["gql","useMutation","useQuery","Form","DisplayError","useForm","SINGLE_PRODUCT_QUERY","UPDATE_PRODUCT_MUTATION","UpdateProduct","id","variables","data","error","loading","console","log","updateProduct","mutationResponse","Product","inputs","handleChange","clearForm","resetForm","e","preventDefault","name","description","price","res"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useMutation, useQuery } from '@apollo/client';\r\nimport Form from './styles/Form';\r\nimport DisplayError from './ErrorMessage';\r\nimport useForm from '../lib/useForm';\r\n\r\nconst SINGLE_PRODUCT_QUERY = gql`\r\n  query SINGLE_PRODUCT_QUERY($id: ID!) {\r\n    Product(where: { id: $id }) {\r\n      id\r\n      name\r\n      description\r\n      price\r\n    }\r\n  }\r\n`;\r\n\r\nconst UPDATE_PRODUCT_MUTATION = gql`\r\n  mutation UPDATE_PRODUCT_MUTATION(\r\n    $id: ID!\r\n    $name: String\r\n    $description: String\r\n    $price: Int\r\n  ) {\r\n    updateProduct(\r\n      id: $id\r\n      data: { name: $name, description: $description, price: $price }\r\n    ) {\r\n      id\r\n      price\r\n      description\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function UpdateProduct({ id }) {\r\n  // 1. get the existing item\r\n  const { data, error, loading } = useQuery(SINGLE_PRODUCT_QUERY, {\r\n    variables: { id },\r\n  });\r\n\r\n  console.log('data from updates: ', data);\r\n\r\n  // 2. get the mutation to update the item\r\n  const [updateProduct, mutationResponse] = useMutation(\r\n    UPDATE_PRODUCT_MUTATION,\r\n    {\r\n      variables: {\r\n        id,\r\n        // updates to the product:\r\n      },\r\n    }\r\n  );\r\n  // inputs state:\r\n  const { inputs, handleChange, clearForm, resetForm } = useForm(data?.Product);\r\n  console.log(inputs);\r\n\r\n  // 3. we need the form to handle the updates\r\n  if (loading) {\r\n    return <p>Loading! </p>;\r\n  }\r\n  return (\r\n    <Form\r\n      onSubmit={async (e) => {\r\n        e.preventDefault();\r\n        const res = await updateProduct({\r\n          variables: {\r\n            id,\r\n            name: inputs.name,\r\n            description: inputs.description,\r\n            price: inputs.price,\r\n          },\r\n        }).catch(console.error);\r\n        console.log('res::: ', res);\r\n        // @TODO: handle submit\r\n      }}\r\n    >\r\n      <DisplayError error={mutationResponse.error || error} />\r\n      <fieldset\r\n        disabled={mutationResponse.loading}\r\n        aria-busy={mutationResponse.loading}\r\n      >\r\n        <label htmlFor=\"name\">\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Name\"\r\n            value={inputs.name}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"price\">\r\n          Price\r\n          <input\r\n            type=\"number\"\r\n            id=\"price\"\r\n            name=\"price\"\r\n            placeholder=\"Price\"\r\n            value={inputs.price}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"description\">\r\n          Description\r\n          <textarea\r\n            id=\"description\"\r\n            name=\"description\"\r\n            placeholder=\"Description\"\r\n            value={inputs.description}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button onClick={() => console.log('inputs::: ', inputs)} type=\"submit\">\r\n          Update Product\r\n        </button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
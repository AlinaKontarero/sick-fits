{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\projects\\\\advanced-react\\\\Advanced-React\\\\sick-fits\\\\frontend\\\\components\\\\DeleteProduct.js\";\nimport { useMutation } from '@apollo/client';\nimport gql from 'graphql-tag';\nconst DELETE_PRODUCT_MUTATION = gql`\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\n    deleteProduct(id: $id) {\n      id\n      price\n      description\n      name\n    }\n  }\n`;\n\nfunction update(cache, payload) {\n  console.log('payload::: ', payload);\n  console.log('running the update fn after deleting ');\n}\n\nexport default function DeleteProduct({\n  id,\n  children\n}) {\n  const [deleteProduct, {\n    loading,\n    error\n  }] = useMutation(DELETE_PRODUCT_MUTATION, {\n    variables: {\n      id\n    },\n    update: update\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: () => {\n      if (confirm('are you sure you wanna delete it?')) {\n        // Go ahead and delete item\n        console.log('delete!');\n        deleteProduct().catch(err => alert(err.message));\n      }\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/projects/advanced-react/Advanced-React/sick-fits/frontend/components/DeleteProduct.js"],"names":["useMutation","gql","DELETE_PRODUCT_MUTATION","update","cache","payload","console","log","DeleteProduct","id","children","deleteProduct","loading","error","variables","confirm","catch","err","alert","message"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,uBAAuB,GAAGD,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;;AAWA,SAASE,MAAT,CAAgBC,KAAhB,EAAuBC,OAAvB,EAAgC;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,OAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AACD;;AAED,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAvB,EAAyC;AACtD,QAAM,CAACC,aAAD,EAAgB;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAhB,IAAsCb,WAAW,CACrDE,uBADqD,EAErD;AACEY,IAAAA,SAAS,EAAE;AACTL,MAAAA;AADS,KADb;AAIEN,IAAAA,MAAM,EAAEA;AAJV,GAFqD,CAAvD;AASA,sBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIY,OAAO,CAAC,mCAAD,CAAX,EAAkD;AAChD;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAI,QAAAA,aAAa,GAAGK,KAAhB,CAAuBC,GAAD,IAASC,KAAK,CAACD,GAAG,CAACE,OAAL,CAApC;AACD;AACF,KARH;AAAA,cAUGT;AAVH;AAAA;AAAA;AAAA;AAAA,UADF;AAcD","sourcesContent":["import { useMutation } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\n\r\nconst DELETE_PRODUCT_MUTATION = gql`\r\n  mutation DELETE_PRODUCT_MUTATION($id: ID!) {\r\n    deleteProduct(id: $id) {\r\n      id\r\n      price\r\n      description\r\n      name\r\n    }\r\n  }\r\n`;\r\n\r\nfunction update(cache, payload) {\r\n  console.log('payload::: ', payload)\r\n  console.log('running the update fn after deleting ')\r\n}\r\n\r\nexport default function DeleteProduct({ id, children }) {\r\n  const [deleteProduct, { loading, error }] = useMutation(\r\n    DELETE_PRODUCT_MUTATION,\r\n    {\r\n      variables: {\r\n        id,\r\n      },\r\n      update: update\r\n    }\r\n  );\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => {\r\n        if (confirm('are you sure you wanna delete it?')) {\r\n          // Go ahead and delete item\r\n          console.log('delete!');\r\n          deleteProduct().catch((err) => alert(err.message));\r\n        }\r\n      }}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"C:/projects/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/projects/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/projects/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\sick-fits\\\\sick-fits\\\\frontend\\\\components\\\\RequestReset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REQUEST_RESET_MUTATION($email: String!) {\\n    sendUserPasswordResetLink(email: $email) {\\n      \\n        id\\n        name\\n        email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport DisplayError from './ErrorMessage';\nvar REQUEST_RESET_MUTATION = gql(_templateObject());\nexport default function RequestReset() {\n  _s();\n\n  var _useForm = useForm({\n    email: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      signup = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return signup()[\"catch\"](console.error);\n\n            case 3:\n              res = _context.sent;\n              console.log(res); // Send the inputs data to the graphqlAPI\n\n              resetForm();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  if (data !== null && data !== void 0 && data.createUser) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Signed up with \", data.createUser.email, \"? Please go ahead and Sign In!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request a password reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your email address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RequestReset, \"BoDXr9VB9mANy84Bjq9FYQfMdKA=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = RequestReset;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequestReset\");","map":{"version":3,"sources":["C:/projects/sick-fits/sick-fits/frontend/components/RequestReset.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","DisplayError","REQUEST_RESET_MUTATION","RequestReset","email","inputs","handleChange","resetForm","variables","signup","loading","error","data","handleSubmit","e","preventDefault","console","res","log","createUser"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,sBAAsB,GAAGN,GAAH,mBAA5B;AAWA,eAAe,SAASO,YAAT,GAAwB;AAAA;;AAAA,iBACOJ,OAAO,CAAC;AAClDK,IAAAA,KAAK,EAAE;AAD2C,GAAD,CADd;AAAA,MAC7BC,MAD6B,YAC7BA,MAD6B;AAAA,MACrBC,YADqB,YACrBA,YADqB;AAAA,MACPC,SADO,YACPA,SADO;;AAAA,qBAKMV,WAAW,CACpDK,sBADoD,EAEpD;AACEM,IAAAA,SAAS,EAAEH,MADb,CAEE;;AAFF,GAFoD,CALjB;AAAA;AAAA,MAK9BI,MAL8B;AAAA;AAAA,MAKpBC,OALoB,kBAKpBA,OALoB;AAAA,MAKXC,KALW,kBAKXA,KALW;AAAA,MAKJC,IALI,kBAKJA,IALI;;AAAA,WAYtBC,YAZsB;AAAA;AAAA;;AAAA;AAAA,6EAYrC,iBAA4BC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,CAAC,CAACC,cAAF;AADF;AAAA,qBAEoBN,MAAM,WAAN,CAAeO,OAAO,CAACL,KAAvB,CAFpB;;AAAA;AAEQM,cAAAA,GAFR;AAGED,cAAAA,OAAO,CAACE,GAAR,CAAYD,GAAZ,EAHF,CAIE;;AACAV,cAAAA,SAAS;;AALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAZqC;AAAA;AAAA;;AAoBrC,MAAIK,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEO,UAAV,EAAsB;AACpB,wBACE;AAAA,oCACkBP,IAAI,CAACO,UAAL,CAAgBf,KADlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAES,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEN,MAAM,CAACD,KALhB;AAME,UAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAhDuBH,Y;UACsBJ,O,EAIDF,W;;;KALrBM,Y","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport Form from './styles/Form';\r\nimport useForm from '../lib/useForm';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport DisplayError from './ErrorMessage';\r\n\r\nconst REQUEST_RESET_MUTATION = gql`\r\n  mutation REQUEST_RESET_MUTATION($email: String!) {\r\n    sendUserPasswordResetLink(email: $email) {\r\n      \r\n        id\r\n        name\r\n        email\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function RequestReset() {\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: '',\r\n  });\r\n\r\n  const [signup, { loading, error, data }] = useMutation(\r\n    REQUEST_RESET_MUTATION,\r\n    {\r\n      variables: inputs,\r\n      // refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n    }\r\n  );\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const res = await signup().catch(console.error);\r\n    console.log(res);\r\n    // Send the inputs data to the graphqlAPI\r\n    resetForm();\r\n  }\r\n\r\n  if (data?.createUser) {\r\n    return (\r\n      <p>\r\n        Signed up with {data.createUser.email}? Please go ahead and Sign In!\r\n      </p>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Form method=\"POST\" onSubmit={handleSubmit}>\r\n      <h2>Request a password reset</h2>\r\n      <DisplayError error={error} />\r\n      <fieldset>\r\n        <label htmlFor=\"email\">\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your email address\"\r\n            autoComplete=\"email\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Request reset</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
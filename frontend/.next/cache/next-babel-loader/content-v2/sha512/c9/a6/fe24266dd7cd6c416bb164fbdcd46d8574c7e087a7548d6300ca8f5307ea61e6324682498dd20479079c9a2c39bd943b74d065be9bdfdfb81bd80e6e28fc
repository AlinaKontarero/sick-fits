{"ast":null,"code":"import _regeneratorRuntime from \"C:/projects/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"C:/projects/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/projects/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"C:/projects/sick-fits/sick-fits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\projects\\\\sick-fits\\\\sick-fits\\\\frontend\\\\components\\\\Reset.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation REQUEST_RESET_MUTATION($email: String!) {\\n    sendUserPasswordResetLink(email: $email) {\\n      code\\n      message\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useMutation } from '@apollo/client';\nimport Form from './styles/Form';\nimport useForm from '../lib/useForm';\nimport { CURRENT_USER_QUERY } from './User';\nimport DisplayError from './ErrorMessage';\nvar REQUEST_RESET_MUTATION = gql(_templateObject());\nexport default function Reset() {\n  _s();\n\n  var _useForm = useForm({\n    email: '',\n    password: '',\n    token: ''\n  }),\n      inputs = _useForm.inputs,\n      handleChange = _useForm.handleChange,\n      resetForm = _useForm.resetForm;\n\n  var _useMutation = useMutation(REQUEST_RESET_MUTATION, {\n    variables: inputs // refetchQueries: [{ query: CURRENT_USER_QUERY }],\n\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      sendUserPasswordResetLink = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  function handleSubmit(_x) {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return sendUserPasswordResetLink()[\"catch\"](console.error);\n\n            case 3:\n              res = _context.sent;\n              console.log(res); // Send the inputs data to the graphqlAPI\n\n              resetForm();\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  if ((data === null || data === void 0 ? void 0 : data.sendUserPasswordResetLink) === null) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Success! Check your email for a link.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"POST\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Request a password reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DisplayError, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Your email address\",\n          autoComplete: \"email\",\n          value: inputs.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          autoComplete: \"password\",\n          value: inputs.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Request reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reset, \"cdAuIXsQEm3/v1aoAk9TWEeW/5Q=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = Reset;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"sources":["C:/projects/sick-fits/sick-fits/frontend/components/Reset.js"],"names":["gql","useMutation","Form","useForm","CURRENT_USER_QUERY","DisplayError","REQUEST_RESET_MUTATION","Reset","email","password","token","inputs","handleChange","resetForm","variables","sendUserPasswordResetLink","loading","error","data","handleSubmit","e","preventDefault","console","res","log"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,IAAMC,sBAAsB,GAAGN,GAAH,mBAA5B;AASA,eAAe,SAASO,KAAT,GAAiB;AAAA;;AAAA,iBACcJ,OAAO,CAAC;AAClDK,IAAAA,KAAK,EAAE,EAD2C;AAElDC,IAAAA,QAAQ,EAAE,EAFwC;AAGlDC,IAAAA,KAAK,EAAE;AAH2C,GAAD,CADrB;AAAA,MACtBC,MADsB,YACtBA,MADsB;AAAA,MACdC,YADc,YACdA,YADc;AAAA,MACAC,SADA,YACAA,SADA;;AAAA,qBAOgCZ,WAAW,CACvEK,sBADuE,EAEvE;AACEQ,IAAAA,SAAS,EAAEH,MADb,CAEE;;AAFF,GAFuE,CAP3C;AAAA;AAAA,MAOvBI,yBAPuB;AAAA;AAAA,MAOMC,OAPN,kBAOMA,OAPN;AAAA,MAOeC,KAPf,kBAOeA,KAPf;AAAA,MAOsBC,IAPtB,kBAOsBA,IAPtB;;AAAA,WAcfC,YAde;AAAA;AAAA;;AAAA;AAAA,6EAc9B,iBAA4BC,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,CAAC,CAACC,cAAF;AADF;AAAA,qBAEoBN,yBAAyB,WAAzB,CAAkCO,OAAO,CAACL,KAA1C,CAFpB;;AAAA;AAEQM,cAAAA,GAFR;AAGED,cAAAA,OAAO,CAACE,GAAR,CAAYD,GAAZ,EAHF,CAIE;;AACAV,cAAAA,SAAS;;AALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAd8B;AAAA;AAAA;;AAsB9B,MAAI,CAAAK,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEH,yBAAN,MAAoC,IAAxC,EAA8C;AAC5C,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,MAAb;AAAoB,IAAA,QAAQ,EAAEI,YAA9B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEF;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA,yCAEE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,WAAW,EAAC,oBAHd;AAIE,UAAA,YAAY,EAAC,OAJf;AAKE,UAAA,KAAK,EAAEN,MAAM,CAACH,KALhB;AAME,UAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA,4CAEE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,IAAI,EAAC,UAFP;AAGE,UAAA,WAAW,EAAC,UAHd;AAIE,UAAA,YAAY,EAAC,UAJf;AAKE,UAAA,KAAK,EAAED,MAAM,CAACF,QALhB;AAME,UAAA,QAAQ,EAAEG;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAzDuBL,K;UACsBJ,O,EAMkBF,W;;;KAPxCM,K","sourcesContent":["import gql from 'graphql-tag';\r\nimport { useMutation } from '@apollo/client';\r\nimport Form from './styles/Form';\r\nimport useForm from '../lib/useForm';\r\nimport { CURRENT_USER_QUERY } from './User';\r\nimport DisplayError from './ErrorMessage';\r\n\r\nconst REQUEST_RESET_MUTATION = gql`\r\n  mutation REQUEST_RESET_MUTATION($email: String!) {\r\n    sendUserPasswordResetLink(email: $email) {\r\n      code\r\n      message\r\n    }\r\n  }\r\n`;\r\n\r\nexport default function Reset() {\r\n  const { inputs, handleChange, resetForm } = useForm({\r\n    email: '',\r\n    password: '',\r\n    token: ''\r\n  });\r\n\r\n  const [sendUserPasswordResetLink, { loading, error, data }] = useMutation(\r\n    REQUEST_RESET_MUTATION,\r\n    {\r\n      variables: inputs,\r\n      // refetchQueries: [{ query: CURRENT_USER_QUERY }],\r\n    }\r\n  );\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const res = await sendUserPasswordResetLink().catch(console.error);\r\n    console.log(res);\r\n    // Send the inputs data to the graphqlAPI\r\n    resetForm();\r\n  }\r\n\r\n  if (data?.sendUserPasswordResetLink === null) {\r\n    return <p>Success! Check your email for a link.</p>;\r\n  }\r\n\r\n  return (\r\n    <Form method=\"POST\" onSubmit={handleSubmit}>\r\n      <h2>Request a password reset</h2>\r\n      <DisplayError error={error} />\r\n      <fieldset>\r\n        <label htmlFor=\"email\">\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Your email address\"\r\n            autoComplete=\"email\"\r\n            value={inputs.email}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <label htmlFor=\"password\">\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            autoComplete=\"password\"\r\n            value={inputs.password}\r\n            onChange={handleChange}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Request reset</button>\r\n      </fieldset>\r\n    </Form>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}